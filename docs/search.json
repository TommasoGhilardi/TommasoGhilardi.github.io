[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About me",
    "section": "",
    "text": "I hold a Ph.D. in developmental science with a strong focus on analyzing complex, real-world data, exploring the stories behind the data, and deriving actionable insights through advanced statistical analysis and computational modeling. I am passionate about sharing knowledge and translating detailed analyses into clear, accessible insights for diverse audiences. To further this, I created DevStart, a website where I share simple tutorials to help others understand and apply what I have learned over the years.\n \n  \n   \n  \n      CV\n  \n  \n    \n     Github\n  \n  \n    \n     Twitter\n  \n  \n    \n     Linkedin\n  \n  \n      Orcid"
  },
  {
    "objectID": "index.html#test",
    "href": "index.html#test",
    "title": "About me",
    "section": "Test",
    "text": "Test"
  },
  {
    "objectID": "posts/stats/test2.html",
    "href": "posts/stats/test2.html",
    "title": "CV",
    "section": "",
    "text": "&lt;div&gt;\n  &lt;h4 class=\"card-title\"&gt;Primary card title&lt;/h4&gt;\n  &lt;p class=\"card-text\"&gt;\n    Some quick example text to build on the card title and make up the bulk of the card's content.\n  &lt;/p&gt;\n&lt;/div&gt;\n&lt;i class=\"bi bi-person-fill\" style=\"font-size: 80px;\"&gt;&lt;/i&gt;\n\n\n\n\n&lt;div&gt;\n  &lt;h4 class=\"card-title\"&gt;Primary card title&lt;/h4&gt;\n  &lt;p class=\"card-text\"&gt;\n    Some quick example text to build on the card title and make up the bulk of the card's content.\n  &lt;/p&gt;\n&lt;/div&gt;\n&lt;i class=\"bi bi-person-fill\" style=\"font-size: 80px; color: #343a40;\"&gt;&lt;/i&gt; \n\n\n\n\n&lt;h5 class=\"card-title\"&gt;Special title treatment&lt;/h5&gt;\n&lt;h6 class=\"card-subtitle text-muted\"&gt;Support card subtitle&lt;/h6&gt;\n\n  Image cap \n\n&lt;p class=\"card-text\"&gt;Some quick example text to build on the card title and make up the bulk of the card's content.&lt;/p&gt;\n\n\n&lt;a href=\"#\" class=\"card-link\"&gt;Card link&lt;/a&gt;\n&lt;a href=\"#\" class=\"card-link\"&gt;Another link&lt;/a&gt;\n\n\n2 days ago\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/general/test4.html",
    "href": "posts/general/test4.html",
    "title": "CV",
    "section": "",
    "text": "&lt;div&gt;\n  &lt;h4 class=\"card-title\"&gt;Primary card title&lt;/h4&gt;\n  &lt;p class=\"card-text\"&gt;\n    Some quick example text to build on the card title and make up the bulk of the card's content.\n  &lt;/p&gt;\n&lt;/div&gt;\n&lt;i class=\"bi bi-person-fill\" style=\"font-size: 80px;\"&gt;&lt;/i&gt;\n\n\n\n\n&lt;div&gt;\n  &lt;h4 class=\"card-title\"&gt;Primary card title&lt;/h4&gt;\n  &lt;p class=\"card-text\"&gt;\n    Some quick example text to build on the card title and make up the bulk of the card's content.\n  &lt;/p&gt;\n&lt;/div&gt;\n&lt;i class=\"bi bi-person-fill\" style=\"font-size: 80px; color: #343a40;\"&gt;&lt;/i&gt; \n\n\n\n\n&lt;h5 class=\"card-title\"&gt;Special title treatment&lt;/h5&gt;\n&lt;h6 class=\"card-subtitle text-muted\"&gt;Support card subtitle&lt;/h6&gt;\n\n\n Image cap\n\n\n&lt;p class=\"card-text\"&gt;Some quick example text to build on the card title and make up the bulk of the card's content.&lt;/p&gt;\n\n\n&lt;a href=\"#\" class=\"card-link\"&gt;Card link&lt;/a&gt;\n&lt;a href=\"#\" class=\"card-link\"&gt;Another link&lt;/a&gt;\n\n\n2 days ago\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Listing.html",
    "href": "Listing.html",
    "title": "Blog",
    "section": "",
    "text": "This is my attempt to write a blog of all the small tutorials that i have done in the past\n\n\n\n\nGeneral\n\n\n\n\n\n\n\n\n\n\nCV\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGithub Desktop\n\n\n\n\n\n\nGithub\n\n\nInstallation\n\n\nGetting started\n\n\n\nVery short tutorial on how to interact with github using github desktop.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstall Python\n\n\n\n\n\n\nPython\n\n\nInstallation\n\n\nGetting started\n\n\n\nVery short tutorial on how I like to install and manage python. In this sort post we will see how to isntall and manage python using miniforge.\n\n\n\n\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "I hold a Ph.D. in developmental science with a strong focus on analyzing complex, real-world data, exploring the stories behind the data, and deriving actionable insights through advanced statistical analysis and computational modeling. I am passionate about sharing knowledge and translating detailed analyses into clear, accessible insights for diverse audiences. To further this, I created DevStart, a website where I share simple tutorials to help others understand and apply what I have learned over the years.\n \n  \n   \n  \n    \n     twitter\n  \n  \n    \n     Github\n  \n  \n    \n     Github\n  \n\n\n\n\nThis content appears below the formatted about page content.\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "CV.html",
    "href": "CV.html",
    "title": "CV",
    "section": "",
    "text": "Academia formattedIndustry formatted\n\n\n  Download PDF File\n   \n    Unable to display PDF file. Download instead.\n  \n  \n\n\n  Download PDF File\n   \n    Unable to display PDF file. Download instead.\n  \n  \n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/general/InstallPython.html",
    "href": "posts/general/InstallPython.html",
    "title": "Install Python",
    "section": "",
    "text": "Python is one of the most popular programming languages out there. I often use Python in our daily work to clean up and analyze data. This tutorial will show you my favorite way to install Python and manage its libraries. There are a few different ways to get Python on your computer, but this is the method I recommend for keeping things simple yet flexible.",
    "crumbs": [
      "General",
      "Install Python"
    ]
  },
  {
    "objectID": "posts/general/InstallPython.html#installing-python",
    "href": "posts/general/InstallPython.html#installing-python",
    "title": "Install Python",
    "section": "Installing python",
    "text": "Installing python\nOne of the most used way to install and manage python is using Anaconda. While Anaconda is one of the most simple way to install python it is quite heavy. It install multiple programs and libraries that most of the time are unnecessary. Another option from the Anaconda website is Miniconda, a minimal installer for conda. It is a small version of Anaconda that includes only conda, Python, the packages they depend on, and a small number of other useful packages. This means that fewer packages are installed and that we have more control on what to have on our PC.\nHowever while these two options are widely used and I have also used them before, I prefer a 3rd option. Miniforge!! Miniforge is very similar to miniconda but has some small differences that set it apart from both Anacodna and miniconda making it the best way to isntall python for me. But what are these differences?\n\nSimilarly to Miniconda it is a lightweight installation of python that comes\n\nMy favorite way to install python is using miniforge!! Miniforge is an installer provided by conda-forge. Conda-Forge is a community-driven open-source project that provides a comprehensive collection of packages for Conda. It serves as an additional channel that users can add to their Conda configuration, offering access to a wide range of packages not available in the default Conda channels. Conda-Forge prioritizes well-maintained packages that adhere to best practices, establishing itself as a reliable source for Python packages. Its community-driven nature ensures a diverse and up-to-date package ecosystem, making it a valuable resource for many Python developers.\n\n\n\n\n\nOnce you press next and accept the conditions the installation program will ask you few questions like so:\n\n\n\n\n\nI suggest to keep the same options I selected but feel free to change them if you know what you are doing.\nPerfect press Install and wait for few minutes for the process to finish!! You are done!!",
    "crumbs": [
      "General",
      "Install Python"
    ]
  },
  {
    "objectID": "posts/stats/test1.html",
    "href": "posts/stats/test1.html",
    "title": "CV",
    "section": "",
    "text": "&lt;div&gt;\n  &lt;h4 class=\"card-title\"&gt;Primary card title&lt;/h4&gt;\n  &lt;p class=\"card-text\"&gt;\n    Some quick example text to build on the card title and make up the bulk of the card's content.\n  &lt;/p&gt;\n&lt;/div&gt;\n&lt;i class=\"bi bi-person-fill\" style=\"font-size: 80px;\"&gt;&lt;/i&gt;\n\n\n\n\n&lt;div&gt;\n  &lt;h4 class=\"card-title\"&gt;Primary card title&lt;/h4&gt;\n  &lt;p class=\"card-text\"&gt;\n    Some quick example text to build on the card title and make up the bulk of the card's content.\n  &lt;/p&gt;\n&lt;/div&gt;\n&lt;i class=\"bi bi-person-fill\" style=\"font-size: 80px; color: #343a40;\"&gt;&lt;/i&gt; \n\n\n\n\n&lt;h5 class=\"card-title\"&gt;Special title treatment&lt;/h5&gt;\n&lt;h6 class=\"card-subtitle text-muted\"&gt;Support card subtitle&lt;/h6&gt;\n\n  Image cap \n\n&lt;p class=\"card-text\"&gt;Some quick example text to build on the card title and make up the bulk of the card's content.&lt;/p&gt;\n\n\n&lt;a href=\"#\" class=\"card-link\"&gt;Card link&lt;/a&gt;\n&lt;a href=\"#\" class=\"card-link\"&gt;Another link&lt;/a&gt;\n\n\n2 days ago\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/general/InstallPython.html#miniforge",
    "href": "posts/general/InstallPython.html#miniforge",
    "title": "Install Python",
    "section": "Miniforge",
    "text": "Miniforge\n\nOk, lead to Miniforge and download the version right for your system. And start the installation process:\n\n\n\n\n\n\nCaution\n\n\n\nThere are multiple version you can download. The one you should download is at the end of the page: Miniforge3\n\n\n\n\n\n\n\nOnce you press next and accept the conditions the installation program will ask you few questions like so:\n\n\n\n\n\nI suggest to keep the same options I selected but feel free to change them if you know what you are doing.\nPerfect press Install and wait for few minutes for the process to finish!! You are done!! What you should have on your system now is this icon:\n\n\n\n\n\n\n\nMiniforge Prompt\n\n\nNow I will show you how to use it!!",
    "crumbs": [
      "General",
      "Install Python"
    ]
  },
  {
    "objectID": "posts/general/InstallPython.html#ide",
    "href": "posts/general/InstallPython.html#ide",
    "title": "Install Python",
    "section": "Ide",
    "text": "Ide\n\nSpyder\nSpyder is a powerful scientific environment ide written in Python. Spyder is designed by and for scientists, engineers and data analysts. It integrates very useful functionalities (variable explorer, plotting, etc.) making it our favorite way to write and run python code.\nWhen you install the full version of Anaconda, it installs Spyder for you. However, Miniforge /Miniconda and do not come with Spyder. Fortunately, they do make it easy to install it. In the Miniforge Prompt type following command and press the “enter” key:\nmamba install spyder\nAfter thinking a bit, the Anaconda prompt will prepared a bunch of files to download and ask if you’d like to proceed. Go ahead and type “y” and hit “enter” to proceed.",
    "crumbs": [
      "General",
      "Install Python"
    ]
  },
  {
    "objectID": "index.html#what-i-like-to-do",
    "href": "index.html#what-i-like-to-do",
    "title": "About me",
    "section": "What I like to do:",
    "text": "What I like to do:\n\n\n&lt;h3&gt;Your Heading&lt;/h3&gt;\n&lt;p&gt;Your text goes here&lt;/p&gt;"
  },
  {
    "objectID": "posts/general/InstallPython.html#use-the-miniforge-prompt",
    "href": "posts/general/InstallPython.html#use-the-miniforge-prompt",
    "title": "Install Python",
    "section": "Use the Miniforge Prompt",
    "text": "Use the Miniforge Prompt\nNow that you have Miniforge installed and can access its prompt, let’s explore how to use it effectively. Our first step will be to create a new virtual environment. What’s a virtual environment you ask?? Well python has different versions. Sometimes when we create scripts we needs to run a specific version of python because some of our packages may rely on older version of python or we have conflicting dependencies with other packages. Virtual environments keep these dependencies in separate “sandboxes” so you can switch between both applications easily and get them running.\nWhen you open Miniforge, you’ll be presented with a terminal prompt. To create your first environment, simply enter the following command:\nmamba create -n working\nThis will create a new environment called (-n) working.\nOnce the environment is created, the prompt will inform you that to work in this specific environment, you need to activate it by typing:\nmamba activate working\nYou’ll notice the prompt changes from (base) to (working), indicating which environment is currently active. Now that you’re in the correct environment, you can install the Python packages you need using mamba install followed by the package name. For example:\nmamba install pandas\n\n\n\n\n\n\nTip\n\n\n\nyou can install multiple packages at once by adding them one after the other e.g. mamba install pandas numpy matplotlib\n\n\nAfter a brief moment, the prompt will download the package(s) and their dependencies. It may ask you to confirm the installation by pressing y. A few seconds later, your chosen libraries will be ready for use! This process ensures that you have a clean, isolated environment with exactly the packages you need for your project. Perfect!\n\n\n\n\n\n\n\n\n\n\n\nMamba and Conda\n\n\n\nIn Miniforge, you have the flexibility to use both mamba and conda commands. In fact, for most operations like creating environments, activating them, and managing your setup, you can use these commands interchangeably. For example:\n mamba create -n myenv\n # or\n conda create -n myenv\n\n mamba activate myenv\n # or\n conda activate myenv\nBoth will work similarly. However, when it comes to installing packages, we recommend using mamba. The reason is simple: mamba is significantly faster at resolving dependencies and installing packages. So, for the best performance, especially with complex environments or large packages, use:\n mamba install package_name\n\n\n\nPip\nWhile conda-forge is an amazing channel to retrieve your packages not all of them are there…In such cases, pip, probably the most renowned Python package manager, can come to the rescue. You might already be aware of pip, versatility for installing and manage packages in Python. Let’s consider numpy, an exceptional package for array manipulation. With pip, installation is a breeze. Simply use the following command:\npip install numpy",
    "crumbs": [
      "General",
      "Install Python"
    ]
  },
  {
    "objectID": "posts/general/InstallPython.html#spyder",
    "href": "posts/general/InstallPython.html#spyder",
    "title": "Install Python",
    "section": "Spyder",
    "text": "Spyder\n\n\nSpyder is a powerful scientific environment IDE written in Python. Spyder is designed by and for scientists, engineers and data analysts. It integrates very useful functionalities (variable explorer, plotting, etc.) making it our favorite way to write and run python code.\n\n\nCommand prompt\nWhen you install the full version of Anaconda, it installs Spyder for you. However, Miniforge/Miniconda and do not come with Spyder. Fortunately, they do make it easy to install it. In the Miniforge Prompt activate the environment you want Spyder into and then type following command and press the “enter” key:\nmamba install spyder\nAfter thinking a bit, the Anaconda prompt will prepared a bunch of files to download and ask if you’d like to proceed. Go ahead and type “y” and hit “enter” to proceed.\nYou now should have new icon of Spyder called Spyder 6 ( “your env name” ). For example :\n\n\n\n\n\n\n\nSpyder 6 (working)\n\n\nIn case you do not see it…Don’t panic!!! You can always open the miniforge prompt, activate your environment and type spyder. Tada !! done!\n\n\n.exe\nSpyder offers an alternative installation method using a standalone file. Simply download the appropriate installation file for your operating system and run it. This approach may seem advantageous as it allows you to install Spyder IDE once, rather than in each environment. You can then switch between different environments through the graphical user interface.\nHowever, this method isn’t as straightforward as it might appear. Any environment you wish to use with Spyder still requires the spyder-kernel package. When you attempt to use Spyder in an environment lacking the spyder-kernel, it will prompt you to install it. You can do this by running mamba install spyder-kernel in the desired environment.\nUltimately, the choice between installation methods depends on your specific needs and preferences.",
    "crumbs": [
      "General",
      "Install Python"
    ]
  },
  {
    "objectID": "posts/general/InstallPython.html#positron",
    "href": "posts/general/InstallPython.html#positron",
    "title": "Install Python",
    "section": "Positron",
    "text": "Positron\n\n\nOne other IDE that I’ve recently discovered and been enjoying is Positron. Positron is a next-generation data science IDE. It’s still in active development, so some features may not work perfectly or might change in the future. However, it’s now in public beta, which means you’re welcome to give it a try! The interface and functionality of Positron feel like a hybrid between VS Code and RStudio/Spyder. Given its ongoing development, you might prefer to wait for the official release. That said, it’s already quite functional and supports both Python and R, with the ability to switch between multiple environments.\nIf you have some time, consider trying Positron out. Your experience could be valuable - don’t hesitate to submit bug reports or feature requests to help improve this promising tool.",
    "crumbs": [
      "General",
      "Install Python"
    ]
  },
  {
    "objectID": "index.html#skills",
    "href": "index.html#skills",
    "title": "About me",
    "section": "Skills",
    "text": "Skills\n\n\n\n  Some quick example text to build on the card title and make up the bulk of the card’s content."
  },
  {
    "objectID": "index.html#test-2",
    "href": "index.html#test-2",
    "title": "About me",
    "section": "TEST 2",
    "text": "TEST 2\n\n\n\n::: {.g-col-4 text-center} ### Python\n\n\n::: {.g-col-4 text-center} ### R\n\n\n::: {.g-col-4 text-center} ### Another Title\n\n\n:::\n\nSome quick example text to build on the card title and make up the bulk of the card’s content.\n\n:::::"
  },
  {
    "objectID": "posts/general/GithubDesktop.html",
    "href": "posts/general/GithubDesktop.html",
    "title": "Github Desktop",
    "section": "",
    "text": "So, you’ve started coding and your friend or supervisor suggested creating a repository for your work? Sounds like a smart move! In this tutorial, we’ll explore how to use one of the simplest tools for managing repositories and code on GitHub: GitHub Desktop.",
    "crumbs": [
      "General",
      "Github Desktop"
    ]
  },
  {
    "objectID": "posts/general/GithubDesktop.html#github-desktop-your-gateway-to-version-control",
    "href": "posts/general/GithubDesktop.html#github-desktop-your-gateway-to-version-control",
    "title": "Github Desktop",
    "section": "Github desktop: your gateway to version control",
    "text": "Github desktop: your gateway to version control\nThere are several ways to interact with GitHub and manage your repositories: git command line, GitKraken, GitHub Desktop, or the website interface. For beginners and those seeking simplicity, GitHub Desktop is an excellent choice.\nGitHub Desktop offers a user-friendly approach to handle your basic version control needs. It’s straightforward enough for newcomers yet capable enough for most projects. You can easily clone repositories, commit changes, and manage your work without diving you crazy with complex commands.\nWhile GitHub Desktop is perfect for getting started and handling everyday tasks, more advanced users working on complex projects might eventually explore more powerful tools. For now, let’s focus on GitHub Desktop - it’s the ideal balance of functionality and ease of use for most us.\nSo go download it and get back here!!",
    "crumbs": [
      "General",
      "Github Desktop"
    ]
  }
]